name: Unit tests

on: [push, pull_request, workflow_dispatch]

jobs:
  run_unit_tests_front:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    container: node:18-alpine
    defaults:
      run:
        working-directory: ./front
    steps:
      - uses: actions/checkout@v3
      - name: Install test dependencies
        run: yarn install
      - name: Run unit tests with coverage
        run: yarn test --coverage
      - name: Upload Unit Tests artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-front
          path: front/coverage
  run_unit_tests_back:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    container: node:19-alpine
    defaults:
      run:
        working-directory: ./server
    env:
      NODE_OPTIONS: "--max_old_space_size=4096"
      REDIS_HOST: "redis"
      DATABASE_URL: "postgresql://test:test@postgres:5432/test?schema=public"
      JWT_SIGNATURE: "12345"
      GENIUS_ACCESS_TOKEN: "${{ secrets.GENIUS_ACCESS_TOKEN }}"
    services:
      postgres:
        image: postgres:alpine3.16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7.0-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Install test dependencies
        run: yarn install
      - name: Migrate DB Schema
        run: yarn run prisma migrate dev
      - name: Run unit tests with coverage
        run: rm -rf server/test/assets/metadata; yarn --cwd server test --coverage --ci --no-cache --maxConcurrency=1 --forceExit
      - name: Upload Unit Tests artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-back
          path: server/coverage
