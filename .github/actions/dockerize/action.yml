name: 'Dockerisation'
description: 'Build using Docker, and publish if necessary'
inputs:
  docker-username: 
    description: 'Username to publish Docker image under'
    required: true
  docker-token: 
    description: 'Token to publish Docker image'
    required: true
  github-token:
    description: 'GitHub Token'
    required: true
  image-suffix: 
    description: "Suffix to 'meelo-'"
    required: true
  publish: 
    description: 'Publish to registry'
    default: 'false'
  context: 
    description: 'Directory of the Dockerfile'
    required: true

runs:
  using: "composite"
  steps: 
    - name: Check out the repo
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker-username }}
        password: ${{ inputs.docker-token }}
    - name: Log in to the GitHub Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          arthichaud/meelo-${{ inputs.image-suffix }}
          ghcr.io/${{ github.repository }}-${{ inputs.image-suffix }}
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.context }} 
        platforms: ${{ (inputs.publish == 'true' || inputs.publish == true) && 'linux/amd64,linuxarm64' || 'linux/amd64' }}
        push: ${{ inputs.publish == 'true' || inputs.publish == true }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ github.event_name == 'release' && steps.meta.outputs.tags || format('arthichaud/meelo-{0}:edge', inputs.image-suffix) }}
        labels: ${{ steps.meta.outputs.labels }}
        # Note: We split this into 2 because ARM is slow to build for the front, and we don't wanna wait for it for PR check for example
        # Sad that matrixes aren't available for composite actions
    # - name: Build and push Docker images (ARM)
    #   uses: docker/build-push-action@v3
    #   if: ${{ inputs.publish == 'true' || inputs.publish == true }}
    #   with:
    #     context: ${{ inputs.context }} 
    #     platforms: linux/arm64
    #     push: true 
    #     cache-from: type=gha
    #     cache-to: type=gha,mode=max
    #     tags: ${{ github.event_name == 'release' && steps.meta.outputs.tags || format('arthichaud/meelo-{0}:edge', inputs.image-suffix) }}
    #     labels: ${{ steps.meta.outputs.labels }}
