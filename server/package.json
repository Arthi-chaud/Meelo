{
	"name": "meelo",
	"version": "0.0.1",
	"description": "Personnal Music Server, for music collectors and records maniacs",
	"author": "Arthi-chaud",
	"private": true,
	"homepage": "https://github.com/Arthi-chaud/Meelo",
	"license": "GNU GENERAL PUBLIC LICENSE v3",
	"scripts": {
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
		"prebuild": "yarn run prisma generate",
		"build": "nest build",
		"start": "nest start",
		"format": "prettier --write src",
		"start:dev": "NODE_ENV=development nest start --watch",
		"start:debug": "nest start --debug --watch",
		"start:prod": "node dist/src/main",
		"test:setup": "docker run -d --rm --env-file ../.env -p 5432:5432 --name test-db postgres:alpine3.16 ; docker run -d --rm --env-file ../.env -p 6379:6379 --name test-queue redis:7.0-alpine; docker run -d --rm --env-file ../.env -p 7700:7700 --name test-meili getmeili/meilisearch:v1.5 ; sleep 5; POSTGRES_HOST=localhost yarn run prisma migrate dev",
		"test:teardown": "docker container stop test-db ; docker container stop test-queue; docker container stop test-meili",
		"test": "INTERNAL_CONFIG_DIR=test/assets/ INTERNAL_DATA_DIR=test/assets/ jest -i",
		"test:cov": "yarn test --coverage",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand"
	},
	"dependencies": {
		"@nestjs/axios": "^3.0.2",
		"@nestjs/bull": "^10.2.0",
		"@nestjs/common": "^10.3.10",
		"@nestjs/config": "^3.2.3",
		"@nestjs/core": "^10.3.10",
		"@nestjs/jwt": "^10.2.0",
		"@nestjs/passport": "^10.0.3",
		"@nestjs/platform-express": "^10.3.10",
		"@nestjs/schedule": "^4.1.0",
		"@nestjs/swagger": "^7.4.0",
		"@prisma/client": "^5.18.0",
		"archiver": "^5.3.1",
		"bcrypt": "^5.1.1",
		"blurhash": "^2.0.5",
		"bull": "^4.16.0",
		"cheerio": "^1.0.0-rc.12",
		"class-transformer": "^0.5.1",
		"class-validator": "^0.14.0",
		"cookie-parser": "^1.4.6",
		"damerau-levenshtein": "^1.0.8",
		"deepmerge": "^4.3.1",
		"fluent-ffmpeg": "^2.1.2",
		"fs": "^0.0.1-security",
		"genius-lyrics-api": "^3.2.0",
		"get-image-colors": "^4.0.1",
		"glob": "^8.0.3",
		"helmet": "^6.0.0",
		"http-proxy-middleware": "^3.0.0",
		"jimp": "^0.16.1",
		"md5": "^2.3.0",
		"md5-file": "^5.0.0",
		"meilisearch": "^0.36.0",
		"mime": "^3.0.0",
		"music-metadata": "^7.13.4",
		"musicbrainz-api": "^0.10.2",
		"nestjs-meilisearch": "^2.1.6",
		"normalize-path": "^3.0.0",
		"passport": "^0.6.0",
		"passport-jwt": "^4.0.0",
		"passport-local": "^1.0.0",
		"prisma": "^5.18.0",
		"prisma-error-enum": "^0.1.3",
		"reflect-metadata": "^0.1.13",
		"rxjs": "^7.8.1",
		"slug": "^5.3.0"
	},
	"resolutions": {
		"jpeg-js": "^0.4.4"
	},
	"devDependencies": {
		"@nestjs/cli": "^8.2.6",
		"@nestjs/schematics": "^8.0.0",
		"@nestjs/testing": "^9.3.9",
		"@types/archiver": "^5.3.1",
		"@types/bcrypt": "^5.0.0",
		"@types/bull": "^4.10.0",
		"@types/cookie-parser": "^1.4.3",
		"@types/cron": "^2.0.0",
		"@types/damerau-levenshtein": "^1.0.0",
		"@types/express": "^4.17.13",
		"@types/fluent-ffmpeg": "^2.1.21",
		"@types/get-image-colors": "^4.0.2",
		"@types/glob": "^8.0.0",
		"@types/jest": "27.4.1",
		"@types/md5": "^2.3.5",
		"@types/normalize-path": "^3.0.0",
		"@types/passport-jwt": "^3.0.7",
		"@types/passport-local": "^1.0.34",
		"@types/slug": "^5.0.3",
		"@types/supertest": "^2.0.11",
		"@typescript-eslint/eslint-plugin": "^5.0.0",
		"@typescript-eslint/parser": "^5.0.0",
		"eslint": "^8.56.0",
		"eslint-config-prettier": "^9.1.0",
		"eslint-plugin-header": "^3.1.1",
		"eslint-plugin-import": "^2.26.0",
		"eslint-plugin-prettier": "^4.0.0",
		"eslint-plugin-simple-import-sort": "^8.0.0",
		"eslint-plugin-unused-imports": "^2.0.0",
		"jest": "^29.7.0",
		"prettier": "^2.3.2",
		"prisma-types-generator": "^1.3.2",
		"source-map-support": "^0.5.20",
		"supertest": "^6.1.3",
		"ts-jest": "^29.2.4",
		"ts-loader": "^9.2.3",
		"ts-node": "^10.0.0",
		"tsconfig-paths": "^3.10.1",
		"type-fest": "^4.24.0",
		"typescript": "^4.3.5"
	},
	"jest": {
		"testTimeout": 150000,
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"roots": [
			"<rootDir>",
			"src"
		],
		"modulePaths": [
			"<rootDir>",
			"src"
		],
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"<rootDir>/src/**/*.(t|j)s"
		],
		"coverageDirectory": "coverage",
		"coverageReporters": [
			"lcov"
		],
		"testEnvironment": "node",
		"testSequencer": "<rootDir>/test/sequencer.ts"
	},
	"prisma": {
		"schema": "prisma/schema.prisma"
	},
	"packageManager": "yarn@4.4.0"
}
